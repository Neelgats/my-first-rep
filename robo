import serial
import time

ser = serial.Serial('COM7', 115200)

integer_value = 50
byte_length = 1
byte_order = 'little'
byte_representation = integer_value.to_bytes(byte_length, byte_order)

barr = bytearray([170, 85, 6, 1, 4]) + byte_representation + bytearray([0, 103])

while True:
    ser.write(barr)
    time.sleep(1)





import time
import serial

usb_port = '/dev/ttyUSB0'
ser = serial.Serial(usb_port, 115200)

right_speed = 50
left_speed = 0

def base_control(speed, radius):
    cs = 0
    barr = bytearray([170, 85, 6, 1, 4])
    barr += speed.to_bytes(2, byteorder='little', signed=True)
    barr += radius.to_bytes(2, byteorder='little', signed=True)
    for i in range(2, len(barr)-1):
        cs = cs ^ barr[i]
    barr += cs.to_bytes(1, byteorder='big')
    ser.write(barr)

def rotate(angle):
    radius = 1
    bot_speed = ((right_speed + left_speed) / 2)
    while True:
        bot_angle = read_data()  # Read angle data
        print("Bot Angle:", bot_angle)
        if bot_angle >= angle:
            print("Reached Desired Angle")
            break
        base_control(int(bot_speed), int(radius))

def read_data():
    while True:
        if ser.read(2) == b"\xaa\x55":  # Check for header bytes
            data = ser.read(200)
            for i in range(0, len(data) - 1):
                if data[i] == 0xAA and data[i + 1] == 0x55:
                    # Inertial sensor data starts at index 21
                    return process_angle_data(data[21:30])  # Return processed data
            time.sleep(0.1)  # Adjust as needed

def process_angle_data(data):
    # Extract and convert angle data (assuming twos complement format)
    x_angle = int.from_bytes(data[2:4], byteorder="little", signed=True)
    y_angle = int.from_bytes(data[4:6], byteorder="little", signed=True)
    z_angle = int.from_bytes(data[6:8], byteorder="little", signed=True)

    # Print or process angles from different axes
    print("Y-Angle:", y_angle)
    actual_angle = (y_angle * 180) / 18000
    print("Actual Angle:", actual_angle)
    return actual_angle

rotate(270)


'''import serial
import time
ser=serial.Serial('COM10',115200)
barr=bytearray([170,85,6,1,4,100,0,103])#header 0,header 1,length of payload bytes ,
                    #payload(header,length,data-speed-low,high ,data-radius-low,high),checksum
ser.write(barr)
time.sleep(1)'''








import serial
import time
ser=serial.Serial('COM5',115200)
while(1):
    if(int.from_bytes(ser.read(2),byteorder='little')==333):
        temp=ser.read(150)
        in_buff=[x for x in temp]
        print(in_buff)
        time.sleep(1000)


